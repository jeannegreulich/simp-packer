{
  "__": " SIMP Packer manifest to run tests for simp-core or any module     ",
  "__": "  that requires a fully working puppet server.                     ",
  "__": "                                                                   ",
  "__": " USAGE:                                                            ",
  "__": "   `~/bin/packer build -var-file=vars.json simp.json`              ",
  "__": "                                                                   ",
  "__": " NOTES:                                                            ",
  "__": "   - The first `<wait10>`s are killing time until SSH can connect  ",
  "__": "   - The comments starting with ## below will be parsed out by the ",
  "__": "     start up script.                                              ",
  "__": "   - You should not need change this file.  SIMP_PACKER environment",
  "__": "     variables and the simp_conf.yaml file passed should be used   ",
  "__": "     to changed behavior.                                          ",
  "variables" :
    {
      "vagrant_password": "vagrant",
      "simp_conf_file": "/var/local/simp/files/simp_conf.yaml"
    },
  "builders": [
    {
      "type": "virtualbox-iso",
      "communicator":"ssh",
      "ssh_pty": "true",
      "guest_os_type": "RedHat_64",
      "iso_url":       "{{user `iso_url`}}",
      "iso_checksum":    "{{user `iso_checksum`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "disk_size": "50000",
      "headless": "true",
      "vm_name": "{{user `vm_description`}}",
      "skip_export": "false",
      "output_directory": "{{user `output_directory`}}",
#      "export_opts": [
#        "--description", "Created by simp-packer - {{user `vm_description`}}"
#        ],
      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "4096"],
        ["modifyvm", "{{.Name}}", "--nic1", "nat"],
        ["modifyvm", "{{.Name}}", "--nic2", "hostonly"],
        ["modifyvm", "{{.Name}}", "--hostonlyadapter2", "{{user `host_only_network_name`}}"],
        ["modifyvm", "{{.Name}}", "--macaddress2", "{{user `mac_address`}}"],
        ["modifyvm", "{{.Name}}", "--macaddress1", "auto"],
        ["modifyvm", "{{.Name}}", "--cpus", "2"],
        ["modifyvm", "{{.Name}}", "--accelerate3d", "off"]
      ],
      "boot_command": [
        "simp {{user `disk_encrypt`}} {{user `fips`}}","<enter>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10><wait10><wait10>",
        "<wait10><wait10><wait10><wait10>",
        "{{user `big_sleep`}}",
        "simp<enter>UserPassword<enter>",
        "<wait><wait>",
        "UserPassword<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "exit<enter>",
        "<wait10>",
        "root<enter>RootPassword<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "RootPassword<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "<wait><wait>",
        "{{user `new_password`}}<enter>",
        "<wait><wait>",
        "<wait><wait>",
# Bring up the NAT network
        "echo 'simp ALL=(ALL) NOPASSWD:ALL'  >> /etc/sudoers<enter>",
        "sed -ie '/Defaults *requiretty/d' /etc/sudoers<enter>",
        "sed -ie 's/ONBOOT=no/ONBOOT=yes/g' /etc/sysconfig/network-scripts/ifcfg-{{user `nat_if`}}<enter>",
        "sed -ie 's/DEFROUTE=yes/DEFROUTE=no/g' /etc/sysconfig/network-scripts/ifcfg-{{user `nat_if`}}<enter>",
        "ifup {{user `nat_if`}}<enter>",
        "exit<enter>"
       ],
      "ssh_username": "simp",
#      "ssh_private_key_file": "{{user `ssh_key`}}",
      "ssh_password": "{{user `new_password`}}",
      "shutdown_command": "sudo /sbin/shutdown -P now"
    }
  ],
  "provisioners": [
###########################################
# Set up the users for packer and vagrant #
# and boot strap the system               #
###########################################
    {
## Copy scripts from the host to the virtual machine for use later on
      "type": "file",
      "source": "./scripts",
      "destination": "/var/local/simp/"
    },
    {
## Copy files from the host to the virtual machine for use later on
      "type": "file",
      "source": "./files",
      "destination": "/var/local/simp/files"
    },
    {
## TEST:  Check if it booted into fips or not according to the
## fips variable set in the boot command.
## These should run as sudo or the environment vars do not work.
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/tests/check_settings_at_boot.sh",
      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
      "environment_vars" : [
        "SIMP_PACKER_fips={{user `fips`}}",
        "SIMP_PACKER_disk_encrypt={{user `disk_encrypt`}}"
      ],
      "script" : "scripts/tests/check_settings_at_boot.sh"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/tests/check_partitions.sh",
      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
      "script" : "scripts/tests/check_partitions.sh"
    },
    {
## Set up the vagrant password
      "type": "shell",
      "remote_path": "/var/local/simp/inline-vagrant-users.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "inline" : [
#        "sed -i 's/enforce_for_root//' /etc/pam.d/system-auth /etc/pam.d/*",
        "useradd vagrant",
        "echo {{user `vagrant_password`}} | passwd vagrant --stdin",
        "mkdir -p /home/vagrant/.ssh",
        "cp /var/local/simp/files/authorized_keys /home/vagrant/.ssh/authorized_keys",
        "chmod g+rX -R /home/vagrant",
        "chown -R vagrant /home/vagrant"
      ]
    },
    {
## Now we run simp using the simp conf yaml file specified in the shell.
## It should complete successfully.
      "type": "shell",
      "remote_path": "/var/local/simp/inline-simp-config.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "inline" : [
         "simp config -a {{user `simp_conf_file`}}"
       ]
    },
    {
## Now run bootstrap.
## This script also configures  a puppet manifest  site::vagrant that configures
## the simp and vagrant users to be allowed to ssh and sudo as needed by packer
## and vagrant.
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/simp-bootstrap.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "script" : "scripts/simp-bootstrap.sh"
    },
    {
## Reboot the system.
      "type": "shell",
      "remote_path": "/var/local/simp/reboot1.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo -E bash '{{.Path}}'",
      "expect_disconnect": true,
      "skip_clean": true,
      "inline" : [
         "/usr/sbin/reboot"
       ]
    },
######################################
#  The system should be bootstrapped #
#  Run some tests                    #
######################################
#   {
## Check settings after bootstrap.
#      "type": "shell",
#      "remote_path": "/var/local/simp/scripts/tests/simp-pupmod_testfips.sh",
#      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
#      "pause_before": "40s",
#      "environment_vars" : [
#        "SIMP_PACKER_simp_conf_file={{user `simp_conf_file`}}"
#      ],
#      "script" : "scripts/tests/simp-pupmod_testfips.sh"
#    },
#    {
## Check settings after bootstrap.
#  To Do, this is outdated.  Need to write new script for checking things
#  Pushing ahead for getting vagrant boxes.
#      "type": "shell",
#      "remote_path": "/var/local/simp/scripts/tests/check_settings_after_bootstrap.sh",
#      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
#      "environment_vars" : [
#        "SIMP_PACKER_simp_conf_file={{user `simp_conf_file`}}"
#      ],
#      "script" : "scripts/tests/check_settings_after_bootstrap.sh"
#    },
#    {
## Check settings after bootstrap, puppet needs to be up and running for this.
#      "type": "shell",
#      "remote_path": "/var/local/simp/scripts/tests/simp-pupmod_test.sh",
#      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
#      "environment_vars" : [
#        "SIMP_PACKER_simp_conf_file={{user `simp_conf_file`}}"
#      ],
#      "script" : "scripts/tests/simp-pupmod_test.sh"
#    }
#########################################################
# More configuration of the system for the vagrant box  #
#########################################################
    {
## Copy setup manifest
      "pause_before": "140s",
      "type": "file",
      "source": "./manifests",
      "destination": "/var/local/simp"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/config/simpsetup.sh",
      "execute_command": "sudo chmod +x {{.Path}}; sudo {{.Vars}} sh '{{.Path}}'",
      "script" : "scripts/config/simpsetup.sh"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/config/sitepp_edit.sh",
      "execute_command": "sudo chmod +x {{.Path}}; sudo {{.Vars}} sh '{{.Path}}'",
      "script" : "scripts/config/sitepp_edit.sh"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/config/hiera.sh",
      "execute_command": "sudo chmod +x {{.Path}}; sudo {{.Vars}} sh '{{.Path}}'",
      "script" : "scripts/config/hiera.sh"
    },
    {
      "type": "puppet-server",
      "ignore_exit_codes": true,
      "options": "--test"
    },
    {
      "type": "file",
      "source":"/net/ISO/Distribution_ISOs/{{user `box_distro_release`}}",
      "destination": "/var/local/simp/ISO"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/inline-unpackdvd.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "inline" : [
        "if [ -f /net/ISO/Distribution_ISOs/{{user `box_distro_release`}} ]; then",
        "/usr/local/bin/unpack_dvd /net/ISO/Distribution_ISOs/{{user `box_distro_release`}}",
        "fi"
      ]
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/scripts/config/unpackdvd.sh",
      "execute_command": "sudo chmod +x {{.Path}}; sudo {{.Vars}} sh '{{.Path}}'",
      "script" : "scripts/config/unpackdvd.sh"
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/inline-vbox.sh",
      "execute_command": "sudo chmod +x {{.Path}}; {{.Vars}} sudo bash '{{.Path}}'",
      "inline" : [
        "yum install -q -y kernel-devel",
        "yum install -q -y gcc",
        "rm -f /lib/modules/`uname -r`/build ; ln -s /usr/src/kernels/`rpm -q kernel-devel --queryformat %{VERSION}-%{RELEASE}.%{ARCH}`/ /lib/modules/`uname -r`/build",
        "mkdir /mnt/vmtools",
        "mount /var/local/simp/VBoxGuestAdditions.iso /mnt/vmtools",
        "sh /mnt/vmtools/VBoxLinuxAdditions.run --nox11; true",
        "umount /mnt/vmtools; rmdir /mnt/vmtools"
      ]
    },
    {
      "type": "shell",
      "remote_path": "/var/local/simp/inline-simp-done.sh",
      "execute_command": "chmod +x {{.Path}}; {{.Vars}} sh '{{.Path}}'",
      "expect_disconnect": true,
      "skip_clean": true,
      "inline" : [
         "echo 'done'"
       ]
    }
  ],
  "post-processors": [
    {
      "type": "vagrant",
      "output": "{{user `output_directory`}}/{{user `vm_description`}}.box",
      "keep_input_artifact": false,
      "include": ["./files/packer-vagrant.pem","./files/packer-vagrant.pub"],
      "compression_level": "6",
      "only": [ "virtualbox-iso" ]
    }
  ]
}
